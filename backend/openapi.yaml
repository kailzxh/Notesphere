openapi: 3.0.1
info:
  title: Notes App API
  version: 1.0.0
paths:
  /auth/signup:
    post:
      summary: Signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email: { type: string }
                password: { type: string }
      responses:
        "201":
          description: Created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  accessToken:
                    type: string
      # sets HttpOnly refresh token cookie
  /auth/login:
    post:
      summary: Login
      requestBody:
        ...
  /auth/refresh:
    post:
      summary: Refresh token
      responses:
        "200":
          description: New access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
  /auth/logout:
    post:
      summary: Logout
      responses:
        "204":
          description: No content
  /api/notes:
    post:
      summary: Create Note
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
      responses:
        "201":
          description: Note created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
    get:
      summary: List Notes
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema: { type: integer, default: 0 }
        - in: query
          name: size
          schema: { type: integer, default: 20 }
      responses:
        "200":
          description: List of notes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesPage'
  /api/notes/{id}:
    get:
      summary: Get Note
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        "200":
          description: Note detail (ETag header included)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
    put:
      summary: Update Note
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
        - in: header
          name: If-Match
          required: true
          schema: { type: string }
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteUpdate'
      responses:
        "200":
          description: Updated note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        "409":
          description: Version conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      summary: Delete Note
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        "204":
          description: No content
  /api/notes/{id}/share:
    post:
      summary: Share Note
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        "200":
          description: Share info
          content:
            application/json:
              schema:
                type: object
                properties:
                  shareId: { type: string }
                  shareUrl: { type: string }
    delete:
      summary: Revoke Share
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string, format: uuid }
      responses:
        "204":
          description: No content
  /api/public/notes/{shareId}:
    get:
      summary: Public Note
      parameters:
        - in: path
          name: shareId
          required: true
          schema: { type: string }
      responses:
        "200":
          description: Public note
          content:
            application/json:
              schema:
                type: object
                properties:
                  title: { type: string }
                  content: { type: string }
                  createdAt: { type: string, format: date-time }
        "404":
          description: Not found or revoked
components:
  schemas:
    User:
      type: object
      properties:
        id: { type: string }
        email: { type: string }
    Note:
      type: object
      properties:
        id: { type: string }
        title: { type: string }
        content: { type: string }
        isShared: { type: boolean }
        version: { type: integer }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
    NoteUpdate:
      type: object
      properties:
        title: { type: string }
        content: { type: string }
    NotesPage:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        page: { type: integer }
        size: { type: integer }
        total: { type: integer }
    ApiError:
      type: object
      properties:
        message: { type: string }
securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT
